{
    "collab_server" : "",
    "contents" : "## Alan Nielsen\n## June 19, 2017\n## Stimulus preparation for Nielsen, Ota, & Dingemanse\n\nrequire(reshape2)\nrequire(plyr)\nrequire(magrittr)\nrequire(lme4)\nrequire(dplyr)\nrequire(tidyr)\nrequire(broom)\nrequire(lattice)\nrequire(doBy)\nrequire(stringr)\n\n##------------------------------------------------------------------\n## Pre-processing:\n##------------------------------------------------------------------\n\nmainPath <- 'D:/Google Drive/Experiments/Collaborations/MitsMark/'\n\nsetwd(file.path(mainPath, \"data\"))\n\n\n###########################################################################################\n\n## The types of stims being used in this experiment are as follows: (Natural types taken from languages are marked with **)\n\n# RI = Reduplicative Ideophones **\n# SRI = Split Reduplicative Ideophones\n# NRI = Non-Reduplicative Ideophones **\n# RNRI = Reduplicated Non-Reduplicative Ideophones\n# NAdj = Normal Adjectives **\n# RNAdj = Reduplicated Normal Adjectives\n\nRI <- read.csv(\"RedupIdeo.csv\") # Read in the Reduplicative ideophones file as a dataframe\nnames(RI)[names(RI) == 'Japanese'] <- 'Word'\n\nSRI <- RI\nSRI %<>%     # Split the strings in the word column in half- so kashikashi becomes kashi (the split version of the reduplicative ideophone)\n  mutate(Word = str_sub(Word, start=nchar(as.character(Word))/2 + 1)) \n\nNRI <- read.csv(\"NonRedupIdeo.csv\")\nnames(NRI)[names(NRI) == 'Japanese'] <- 'Word'\n\nRNRI <- NRI # Copy to a new dataframe to be modified for Reduplicated Non-reduplicative ideophones\nRNRI$Word2 <- RNRI$Word\nRNRI <- unite(RNRI, Word, Word, Word2, sep = \"\", remove = TRUE) # Reduplicate the word\n\n\nNAdj <- read.csv(\"NormAdjs.csv\")              # Read in normal adjectives\nnames(NAdj)[names(NAdj) == 'Japanese'] <- 'Word'\n\nRNAdj <- NAdj # Copy to a new dataframe to be modified for Reduplicated Normal Adjectives\nRNAdj$Word2 <- RNAdj$Word\nRNAdj <- unite(RNAdj, Word, Word, Word2, sep = '', remove= TRUE)\n\nRI$WordType <- \"RI\"      # add a wordtype column to all of them showing their wordtype\nSRI$WordType <- \"SRI\"\nNRI$WordType <- \"NRI\"\nRNRI$WordType <- \"RNRI\"\nNAdj$WordType <- \"NAdj\"\nRNAdj$WordType <- \"RNAdj\"\n\nWordList <- rbind(RI, SRI, NRI, RNRI, NAdj, RNAdj) # Write this all into one word list\n\nwrite.csv(WordList, \"WordList.csv\", row.names = FALSE)\n\nrm(RI, SRI, NRI, RNRI, NAdj, RNAdj)\n\n###################################################              Stimlist Creation Begins Here                   ########################################################\n\n##################### So, that's just a creation of all possible words, but for actual experiments that's not how things go\n\nRI <- read.csv(\"RedupIdeo.csv\")                     # Read in the Reduplicative ideophones \nRI <- RI[sample(nrow(RI)),]                         # Scrambles the order of the dataframe\nRIsplit <- split(RI, rep(1:2, each= 10))            # Split the dataframe into two equal parts\nRI <- RIsplit$'1'                                   # use half of the RI as RI\nSRI <- RIsplit$'2'                                  # use half of the RI as SRI (split them below)\nSRI %<>%  mutate(Japanese = str_sub(Japanese, start=nchar(as.character(Japanese))/2 + 1)) \n\n\nNRI <- read.csv(\"NonRedupIdeo.csv\")                  # Read in the Non-Reduplicative ideophones\nNRI <- NRI[sample(nrow(NRI)),]                       # Scrambles the order of the dataframe\nNRIsplit <- split(NRI, rep(1:2, each= 10))           # Split the dataframe into two equal parts\nNRI <- NRIsplit$'1'                                  # use half of the NRI as NRI\nRNRI <- NRIsplit$'2'                                 # use half of the NRI as RNRI (reduplicated below)\nRNRI$Word2 <- RNRI$Japanese\nRNRI <- unite(RNRI, Japanese, Japanese, Word2, sep = \"\", remove = TRUE) \n\n\nNAdj <- read.csv(\"NormAdjs.csv\")                     # Read in normal adjectives\nNAdj <- NAdj[sample(nrow(NAdj)),]                    # Scrambles the order of the dataframe\nNAdjsplit <- split(NAdj, rep(1:2, each= 10))         # Split the dataframe into two equal parts\nNAdj <- NAdjsplit$'1'                                # use half of the NA as NA\nRNAdj <- NAdjsplit$'2'                               # use half of the NA as RNA (reduplicated below)\nRNAdj$Word2 <- RNAdj$Japanese\nRNAdj <- unite(RNAdj, Japanese, Japanese, Word2, sep = \"\", remove = TRUE) \n\nRI$WordType <- \"RI\"      # add a wordtype column to all of them showing their wordtype\nSRI$WordType <- \"SRI\"\nNRI$WordType <- \"NRI\"\nRNRI$WordType <- \"RNRI\"\nNAdj$WordType <- \"NAdj\"\nRNAdj$WordType <- \"RNAdj\"\n\n############################################################# Some Different Experimental Designs ####################################################\n\n############################################################   1 - Full Between Subjects Design\n\n### Read in the files\nRI <- read.csv(\"RedupIdeo.csv\") # Read in the Reduplicative ideophones file as a dataframe\nnames(RI)[names(RI) == 'Japanese'] <- 'Word'\nSRI <- RI\nSRI %<>%     # Split the strings in the word column in half- so kashikashi becomes kashi (the split version of the reduplicative ideophone)\n  mutate(Word = str_sub(Word, start=nchar(as.character(Word))/2 + 1)) \nNRI <- read.csv(\"NonRedupIdeo.csv\")\nnames(NRI)[names(NRI) == 'Japanese'] <- 'Word'\nRNRI <- NRI # Copy to a new dataframe to be modified for Reduplicated Non-reduplicative ideophones\nRNRI$Word2 <- RNRI$Word\nRNRI <- unite(RNRI, Word, Word, Word2, sep = \"\", remove = TRUE) # Reduplicate the word\nNAdj <- read.csv(\"NormAdjs.csv\")              # Read in normal adjectives\nnames(NAdj)[names(NAdj) == 'Japanese'] <- 'Word'\nRNAdj <- NAdj # Copy to a new dataframe to be modified for Reduplicated Normal Adjectives\nRNAdj$Word2 <- RNAdj$Word\nRNAdj <- unite(RNAdj, Word, Word, Word2, sep = '', remove= TRUE)\nRI$WordType <- \"RI\"      # add a wordtype column to all of them showing their wordtype\nSRI$WordType <- \"SRI\"\nNRI$WordType <- \"NRI\"\nRNRI$WordType <- \"RNRI\"\nNAdj$WordType <- \"NAdj\"\nRNAdj$WordType <- \"RNAdj\"\n\n\n####################### Output sample Files\n\nSelectedStims <- RI[sample(nrow(RI)), ]\nTraining <- rbind(SelectedStims[sample(nrow(SelectedStims)),], SelectedStims[sample(nrow(SelectedStims)),])\nTraining <- subset(Training, select = c(Word, Engl, Dutch, WordType))\nwrite.csv(Training, \"Training_FullBetween_.csv\")\n\nTestingCorrect <- SelectedStims[sample(nrow(SelectedStims)),]\nTestingCorrect$Correct <- \"Y\"\nTestingIncorrect <- transform(SelectedStims, Word = sample(Word))\nTestingIncorrect$Correct <- \"N\"\nTesting <- rbind(TestingCorrect, TestingIncorrect)\nTesting<- subset(Testing, select = c(Word, Engl, Dutch, WordType, Correct))\nTesting <- Testing[sample(nrow(Testing)),]\nwrite.csv(Testing, \"Testing_FullBetween_.csv\")\n\n\n\n# Cleanup\nrm(RI, SRI, NRI, RNRI, NAdj, RNAdj)\nrm(NAdjsplit, NRIsplit, RIsplit)\nrm (Testing, TestingIncorrect, TestingCorrect, Training, Training2, Training1)\n\n\n############################################################   2 - Full Within Subjects Design\n\n## Read in the files\n\nRI <- read.csv(\"RedupIdeo.csv\")                     # Read in the Reduplicative ideophones \nRI <- RI[sample(nrow(RI)),]                         # Scrambles the order of the dataframe\nRIsplit <- split(RI, rep(1:2, each= 10))            # Split the dataframe into two equal parts\nRI <- RIsplit$'1'                                   # use half of the RI as RI\nSRI <- RIsplit$'2'                                  # use half of the RI as SRI (split them below)\nSRI %<>%  mutate(Japanese = str_sub(Japanese, start=nchar(as.character(Japanese))/2 + 1)) \n\n\nNRI <- read.csv(\"NonRedupIdeo.csv\")                  # Read in the Non-Reduplicative ideophones\nNRI <- NRI[sample(nrow(NRI)),]                       # Scrambles the order of the dataframe\nNRIsplit <- split(NRI, rep(1:2, each= 10))           # Split the dataframe into two equal parts\nNRI <- NRIsplit$'1'                                  # use half of the NRI as NRI\nRNRI <- NRIsplit$'2'                                 # use half of the NRI as RNRI (reduplicated below)\nRNRI$Word2 <- RNRI$Japanese\nRNRI <- unite(RNRI, Japanese, Japanese, Word2, sep = \"\", remove = TRUE) \n\n\nNAdj <- read.csv(\"NormAdjs.csv\")                     # Read in normal adjectives\nNAdj <- NAdj[sample(nrow(NAdj)),]                    # Scrambles the order of the dataframe\nNAdjsplit <- split(NAdj, rep(1:2, each= 10))         # Split the dataframe into two equal parts\nNAdj <- NAdjsplit$'1'                                # use half of the NA as NA\nRNAdj <- NAdjsplit$'2'                               # use half of the NA as RNA (reduplicated below)\nRNAdj$Word2 <- RNAdj$Japanese\nRNAdj <- unite(RNAdj, Japanese, Japanese, Word2, sep = \"\", remove = TRUE) \n\nRI$WordType <- \"RI\"      # add a wordtype column to all of them showing their wordtype\nSRI$WordType <- \"SRI\"\nNRI$WordType <- \"NRI\"\nRNRI$WordType <- \"RNRI\"\nNAdj$WordType <- \"NAdj\"\nRNAdj$WordType <- \"RNAdj\"\n\n####################### Output sample Files\n\nTraining_FullWithin <- rbind(RI, SRI, NRI, RNRI, NAdj, RNAdj)\nnames(Training_FullWithin)[names(Training_FullWithin) == 'Japanese'] <- 'Word'\nTraining_FullWithin <- subset(Training_FullWithin, select = c(Word, Engl, Dutch, WordType))\nTrainingFullWithin1 <- Training_FullWithin[sample(nrow(Training_FullWithin)),]\nTrainingFullWithin2 <- Training_FullWithin[sample(nrow(Training_FullWithin)),]\nTraining_FullWithin <- rbind(TrainingFullWithin1, TrainingFullWithin2)\nwrite.csv(Training_FullWithin, \"Training_FullWithin.csv\")\n\nTestingCorrect <- TrainingFullWithin1\nTestingCorrect$Correct <- \"Y\"\nTestingIncorrect <- transform(TrainingFullWithin2, Word = sample(Word))\nTestingIncorrect$Correct <- \"N\"\nTesting_FullWithin <- rbind(TestingCorrect, TestingIncorrect)\nTesting_FullWithin <- Testing_FullWithin[sample(nrow(Testing_FullWithin)),]\nwrite.csv(Testing_FullWithin, \"Testing_FullWithin.csv\")\n\n# Tidy up the Space\nrm(RI, SRI, NRI, RNRI, NAdj, RNAdj)\nrm(NAdjsplit, NRIsplit, RIsplit)\nrm (Testing_FullWithin, TestingIncorrect, TestingCorrect, Training_FullWithin, TrainingFullWithin2, TrainingFullWithin1)\n\n\n############################################################   3 - Sampled Within Subjects Design\n\nRI <- read.csv(\"RedupIdeo.csv\")                     # Read in the Reduplicative ideophones \nRI <- RI[sample(nrow(RI)),]                         # Scrambles the order of the dataframe\nRIsplit <- split(RI, rep(1:4, each= 6))            # Split the dataframe into two equal parts\nRI <- RIsplit$'1'                                   # use half of the RI as RI\nSRI <- RIsplit$'2'                                  # use half of the RI as SRI (split them below)\nSRI %<>%  mutate(Japanese = str_sub(Japanese, start=nchar(as.character(Japanese))/2 + 1)) \n\n\nNRI <- read.csv(\"NonRedupIdeo.csv\")                  # Read in the Non-Reduplicative ideophones\nNRI <- NRI[sample(nrow(NRI)),]                       # Scrambles the order of the dataframe\nNRIsplit <- split(NRI, rep(1:4, each= 6))           # Split the dataframe into two equal parts\nNRI <- NRIsplit$'1'                                  # use half of the NRI as NRI\nRNRI <- NRIsplit$'2'                                 # use half of the NRI as RNRI (reduplicated below)\nRNRI$Word2 <- RNRI$Japanese\nRNRI <- unite(RNRI, Japanese, Japanese, Word2, sep = \"\", remove = TRUE) \n\n\nNAdj <- read.csv(\"NormAdjs.csv\")                     # Read in normal adjectives\nNAdj <- NAdj[sample(nrow(NAdj)),]                    # Scrambles the order of the dataframe\nNAdjsplit <- split(NAdj, rep(1:4, each= 6))         # Split the dataframe into two equal parts\nNAdj <- NAdjsplit$'1'                                # use half of the NA as NA\nRNAdj <- NAdjsplit$'2'                               # use half of the NA as RNA (reduplicated below)\nRNAdj$Word2 <- RNAdj$Japanese\nRNAdj <- unite(RNAdj, Japanese, Japanese, Word2, sep = \"\", remove = TRUE) \n\nRI$WordType <- \"RI\"      # add a wordtype column to all of them showing their wordtype\nSRI$WordType <- \"SRI\"\nNRI$WordType <- \"NRI\"\nRNRI$WordType <- \"RNRI\"\nNAdj$WordType <- \"NAdj\"\nRNAdj$WordType <- \"RNAdj\"\n\n####################### Output sample Files\n\nTraining_FullWithin <- rbind(RI, SRI, NRI, RNRI, NAdj, RNAdj)\nnames(Training_FullWithin)[names(Training_FullWithin) == 'Japanese'] <- 'Word'\nTraining_FullWithin <- subset(Training_FullWithin, select = c(Word, Engl, Dutch, WordType))\nTrainingFullWithin1 <- Training_FullWithin[sample(nrow(Training_FullWithin)),]\nTrainingFullWithin2 <- Training_FullWithin[sample(nrow(Training_FullWithin)),]\nTraining_FullWithin <- rbind(TrainingFullWithin1, TrainingFullWithin2)\nwrite.csv(Training_FullWithin, \"Training_SampledWithin.csv\")\n\nTestingCorrect <- TrainingFullWithin1\nTestingCorrect$Correct <- \"Y\"\nTestingIncorrect <- transform(TrainingFullWithin2, Word = sample(Word))\nTestingIncorrect$Correct <- \"N\"\nTesting_FullWithin <- rbind(TestingCorrect, TestingIncorrect)\nTesting_FullWithin <- Testing_FullWithin[sample(nrow(Testing_FullWithin)),]\nwrite.csv(Testing_FullWithin, \"Testing_SampledWithin.csv\")\n\n# Tidy up the Space\nrm(RI, SRI, NRI, RNRI, NAdj, RNAdj)\nrm(NAdjsplit, NRIsplit, RIsplit)\nrm (Testing_FullWithin, TestingIncorrect, TestingCorrect, Training_FullWithin, TrainingFullWithin2, TrainingFullWithin1)\n\n\n############################################################   4 - Crossed Design\n\n# 4) Crossed Design\n# Instead of limiting the number of meanings of each type in a within-subjects design, the within-subjects bit could be which Word Types each participant had to learn- i.e. a given participant could learn 10 meanings from each of the 4 word types, for at total of 40 meanings (again close to 38)\n# From 6 Word Types there are 15 ways to pick 4 types- so there would be 15 \"subconditions), which hopefully wouldn't turn out to matter\n\nRI <- read.csv(\"RedupIdeo.csv\")                     # Read in the Reduplicative ideophones \nRI <- RI[sample(nrow(RI)),]                         # Scrambles the order of the dataframe\nRIsplit <- split(RI, rep(1:2, each= 10))            # Split the dataframe into two equal parts\nRI <- RIsplit$'1'                                   # use half of the RI as RI\nSRI <- RIsplit$'2'                                  # use half of the RI as SRI (split them below)\nSRI %<>%  mutate(Japanese = str_sub(Japanese, start=nchar(as.character(Japanese))/2 + 1)) \n\n\nNRI <- read.csv(\"NonRedupIdeo.csv\")                  # Read in the Non-Reduplicative ideophones\nNRI <- NRI[sample(nrow(NRI)),]                       # Scrambles the order of the dataframe\nNRIsplit <- split(NRI, rep(1:2, each= 10))           # Split the dataframe into two equal parts\nNRI <- NRIsplit$'1'                                  # use half of the NRI as NRI\nRNRI <- NRIsplit$'2'                                 # use half of the NRI as RNRI (reduplicated below)\nRNRI$Word2 <- RNRI$Japanese\nRNRI <- unite(RNRI, Japanese, Japanese, Word2, sep = \"\", remove = TRUE) \n\n\nNAdj <- read.csv(\"NormAdjs.csv\")                     # Read in normal adjectives\nNAdj <- NAdj[sample(nrow(NAdj)),]                    # Scrambles the order of the dataframe\nNAdjsplit <- split(NAdj, rep(1:2, each= 10))         # Split the dataframe into two equal parts\nNAdj <- NAdjsplit$'1'                                # use half of the NA as NA\nRNAdj <- NAdjsplit$'2'                               # use half of the NA as RNA (reduplicated below)\nRNAdj$Word2 <- RNAdj$Japanese\nRNAdj <- unite(RNAdj, Japanese, Japanese, Word2, sep = \"\", remove = TRUE) \n\nRI$WordType <- \"RI\"      # add a wordtype column to all of them showing their wordtype\nSRI$WordType <- \"SRI\"\nNRI$WordType <- \"NRI\"\nRNRI$WordType <- \"RNRI\"\nNAdj$WordType <- \"NAdj\"\nRNAdj$WordType <- \"RNAdj\"\n\n####################### Output sample Files\n# Possible Combinations:\n# RI, SRI, NRI, RNRI\n# RI, SRI, NRI, NAdj\n# RI, SRI, NRI, RNAdj\n# RI, SRI, RNRI, NAdj\n# RI, SRI, RNRI, RNAdj\n# RI, SRI, NAdj, RNAdj\n# RI, NRI, RNRI, NAdj\n# RI, NRI, RNRI, RNAdj\n# RI, NRI, NAdj, RNAdj\n# RI, RNRI, NAdj, RNAdj\n# SRI, NRI, RNRI, NAdj\n# SRI, NRI, RNRI, RNAdj\n# SRI, NRI, NAdj, RNAdj\n# SRI, RNRI, NAdj, RNAdj\n# NRI, RNRI, NAdj, RNAdj\n\nTraining <- rbind(NRI, RNRI, NAdj, RNAdj)\nnames(Training)[names(Training) == 'Japanese'] <- 'Word'\nTraining <- subset(Training, select = c(Word, Engl, Dutch, WordType))\nTraining1 <- Training[sample(nrow(Training)),]\nTraining2 <- Training[sample(nrow(Training)),]\nTraining <- rbind(Training1, Training2)\nwrite.csv(Training, \"Training_Crossed.csv\")\n\nTestingCorrect <- Training1\nTestingCorrect$Correct <- \"Y\"\nTestingIncorrect <- transform(Training2, Word = sample(Word))\nTestingIncorrect$Correct <- \"N\"\nTesting <- rbind(TestingCorrect, TestingIncorrect)\nTesting <- Testing[sample(nrow(Testing)),]\nwrite.csv(Testing, \"Testing_Crossed.csv\")\n\n# Cleanup\nrm(RI, SRI, NRI, RNRI, NAdj, RNAdj)\nrm(NAdjsplit, NRIsplit, RIsplit)\nrm (Testing, TestingIncorrect, TestingCorrect, Training, Training2, Training1)\n\n############################################################   5 - Modified Crossed Design\n\n## as above but possible combinations:\n\n# RI, SRI, NRI, RNRI\n# RI, SRI, NRI, RNAdj\n# RI, SRI, RNRI, NAdj\n# RI, SRI, NAdj, RNAdj\n# RI, NRI, RNRI, NAdj\n# RI, NRI, NAdj, RNAdj\n# SRI, NRI, RNRI, RNAdj\n# SRI, RNRI, NAdj, RNAdj\n# NRI, RNRI, NAdj, RNAdj\n\n############################################################   7 - Limited Between Subjects Design\n\n### Read in the files\nRI <- read.csv(\"RedupIdeo.csv\") # Read in the Reduplicative ideophones file as a dataframe\nnames(RI)[names(RI) == 'Japanese'] <- 'Word'\nSRI <- RI\nSRI %<>%     # Split the strings in the word column in half- so kashikashi becomes kashi (the split version of the reduplicative ideophone)\n  mutate(Word = str_sub(Word, start=nchar(as.character(Word))/2 + 1)) \nNRI <- read.csv(\"NonRedupIdeo.csv\")\nnames(NRI)[names(NRI) == 'Japanese'] <- 'Word'\nRNRI <- NRI # Copy to a new dataframe to be modified for Reduplicated Non-reduplicative ideophones\nRNRI$Word2 <- RNRI$Word\nRNRI <- unite(RNRI, Word, Word, Word2, sep = \"\", remove = TRUE) # Reduplicate the word\nNAdj <- read.csv(\"NormAdjs.csv\")              # Read in normal adjectives\nnames(NAdj)[names(NAdj) == 'Japanese'] <- 'Word'\nRNAdj <- NAdj # Copy to a new dataframe to be modified for Reduplicated Normal Adjectives\nRNAdj$Word2 <- RNAdj$Word\nRNAdj <- unite(RNAdj, Word, Word, Word2, sep = '', remove= TRUE)\nRI$WordType <- \"RI\"      # add a wordtype column to all of them showing their wordtype\nSRI$WordType <- \"SRI\"\nNRI$WordType <- \"NRI\"\nRNRI$WordType <- \"RNRI\"\nNAdj$WordType <- \"NAdj\"\nRNAdj$WordType <- \"RNAdj\"\n\n####################### Output sample Files\n\nSelectedStims <- RNAdj[sample(nrow(RNAdj),10), ]\nTraining <- rbind(SelectedStims[sample(nrow(SelectedStims)),], SelectedStims[sample(nrow(SelectedStims)),])\nTraining <- subset(Training, select = c(Word, Engl, Dutch, WordType))\nwrite.csv(Training, \"Training_LimBetween_.csv\")\n\nTestingCorrect <- SelectedStims[sample(nrow(SelectedStims)),]\nTestingCorrect$Correct <- \"Y\"\nTestingIncorrect <- transform(SelectedStims, Word = sample(Word))\nTestingIncorrect$Correct <- \"N\"\nTesting <- rbind(TestingCorrect, TestingIncorrect)\nTesting<- subset(Testing, select = c(Word, Engl, Dutch, WordType, Correct))\nTesting <- Testing[sample(nrow(Testing)),]\nwrite.csv(Testing, \"Testing_LimBetween_.csv\")\n\n\n\n# Cleanup\nrm(RI, SRI, NRI, RNRI, NAdj, RNAdj)\nrm(NAdjsplit, NRIsplit, RIsplit)\nrm (Testing, TestingIncorrect, TestingCorrect, Training, Training2, Training1)\n\n\n\n",
    "created" : 1497859868927.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "150754956",
    "id" : "C65F87E4",
    "lastKnownWriteTime" : 1497879625,
    "last_content_update" : 1497879625537,
    "path" : "D:/Google Drive/Experiments/Collaborations/MitsMark/MitsMark- Experiment Design.R",
    "project_path" : "MitsMark- Experiment Design.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}